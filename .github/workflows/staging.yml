name: Staging Migrations

on:
  push:
    branches: ["staging"]
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest

    env:
      # Configure these in GitHub repo: Settings > Secrets and variables > Actions
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      ALLOW_DESTRUCTIVE: ${{ secrets.ALLOW_DESTRUCTIVE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Prisma generate
        run: npx prisma generate

      - name: Check migrations for destructive SQL
        shell: bash
        run: |
          set -euo pipefail
          echo "Scanning prisma/migrations for destructive SQL..."
          found=0
          if grep -Eir --line-number --with-filename \
            "(DROP[[:space:]]+TABLE|DROP[[:space:]]+COLUMN|TRUNCATE|ALTER[[:space:]]+TABLE[^;]*DROP|CASCADE;)" \
            prisma/migrations/*/migration.sql; then
            found=1
          fi

          if [ "$found" -eq 1 ]; then
            if [ "${ALLOW_DESTRUCTIVE:-}" != "true" ]; then
              echo "Destructive SQL detected. Blocked. Set ALLOW_DESTRUCTIVE=true (with review) to proceed."
              exit 1
            else
              echo "Destructive SQL detected but ALLOW_DESTRUCTIVE=true â€” proceeding as approved."
            fi
          else
            echo "No destructive SQL detected."
          fi

      - name: Apply Prisma migrations (deploy)
        run: npx prisma migrate deploy
